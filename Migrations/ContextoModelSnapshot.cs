// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema_Academico.DAL;

namespace Sistema_Academico.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Sistema_Academico.Models.Asignaturas", b =>
                {
                    b.Property<int>("AsignaturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Creditos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("Grupo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("HoraFinal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("AsignaturaId");

                    b.ToTable("Asignaturas");
                });

            modelBuilder.Entity("Sistema_Academico.Models.Calificaciones", b =>
                {
                    b.Property<int>("EstudianteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CalificacionFinal")
                        .HasColumnType("REAL");

                    b.Property<int>("MatriculaEstudiante")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreEstudiante")
                        .HasColumnType("TEXT");

                    b.HasKey("EstudianteId");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("Sistema_Academico.Models.Carreras", b =>
                {
                    b.Property<int>("CarreraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Creditos")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Duracion")
                        .HasColumnType("REAL");

                    b.Property<double>("HorasPensum")
                        .HasColumnType("REAL");

                    b.Property<double>("HorasPracticas")
                        .HasColumnType("REAL");

                    b.Property<double>("HorasTeoricas")
                        .HasColumnType("REAL");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int>("SemestresAcademicos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TituloOtorgado")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalAsignaturas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalAsignaturasElectivas")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarreraId");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("Sistema_Academico.Models.Estudiantes", b =>
                {
                    b.Property<int>("EstudianteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Carrera")
                        .HasColumnType("TEXT");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("TEXT");

                    b.Property<int>("Matricula")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int>("Telefono")
                        .HasColumnType("INTEGER");

                    b.HasKey("EstudianteId");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Sistema_Academico.Models.Grupos", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Asignatura")
                        .HasColumnType("TEXT");

                    b.Property<string>("Aula")
                        .HasColumnType("TEXT");

                    b.Property<int>("CantidadEstudiantes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumeroGrupo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Profesor")
                        .HasColumnType("TEXT");

                    b.HasKey("GrupoId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Sistema_Academico.Models.Pensum", b =>
                {
                    b.Property<int>("PensumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Asignatura")
                        .HasColumnType("TEXT");

                    b.Property<string>("Carrera")
                        .HasColumnType("TEXT");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<int>("Creditos")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<double>("HorasPracticas")
                        .HasColumnType("REAL");

                    b.Property<double>("HorasTeoricas")
                        .HasColumnType("REAL");

                    b.Property<string>("PreRequisitos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Semestre")
                        .HasColumnType("TEXT");

                    b.HasKey("PensumId");

                    b.ToTable("Pensum");
                });

            modelBuilder.Entity("Sistema_Academico.Models.Profesores", b =>
                {
                    b.Property<int>("ProfesorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cedula")
                        .HasColumnType("TEXT");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("ProfesorId");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("Sistema_Academico.Models.Semestres", b =>
                {
                    b.Property<int>("SemestreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("SemestreId");

                    b.ToTable("Semestres");
                });
#pragma warning restore 612, 618
        }
    }
}
